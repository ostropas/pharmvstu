FORMAT: 1A
HOST: https://pharmvstu.azurewebsites.net/api

# Pharmvstu api документация
Описание апи поликлинники

# Разрешенные запросы:
<pre>
PUT     : Создать ресурс
POST    : Обновить ресурс
GET     : Получить ресурс или список ресурсов
DELETE  : Удалить ресурс
</pre>

# Описание частых ответов:
- 200 `OK` - Все ок
- 401 `Unauthorized` - не авторизирован или нет привелегий

# Group Аутентификация
Методы модуля авторизации/регистрации


## Авторизация [/auth]
### Получить токен JWT [POST]
Авторизация пользователя 

+ Attributes
    + email: test@test.ru (required, string) - почта пользователя
    + password: stringPassword (required, string) - пароль пользователя
    
+ Request (application/json)

+ Response 200 (text/plain)
    Токен jwt
        + body
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

## Регистрация [/reg]
### Получить токен JWT [POST]
Регистрация пользователя

+ Attributes
    + email: test@test.ru (required, string) - почта пользователя
    + password: strongPassword (required, string) - пароль пользователя
    + fio: Иванов Иван Иванович (required, string) - фио пользователя
    + doctor: true (required, boolean) - доктор или пациент
    
+ Request (application/json)

+ Response 200 (text/plain)
    Токен jwt
    + body
    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

# Group Пользователь
Отображение деталей пользователя, общие для доктора и пациента
## Данные пользователя [/user]
### Получить данные пользователя [GET]
+ Request
    + Headers
        Authentication: Bearer JWT
        
+ Response 200 (application/json)
    + Attributes
        + id: 1 (number) - идендификатор пользователя
        + email: test@test.ru (string) - почта пользователя
        + fio: Иванов Иван Иванович (string) - фио пользователя
        + doctor: true (boolean) - доктор или пациент
        
+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }
            

# Group Доктор
Методы модуля доктор
## Записанные пациенты [/doctor/patients]
### Список всех пациентов [GET]
Получение всех пациентов записанных к доктору, работает только когда на сайт вошел доктор.
В базе данных ищется доктор относительно текущего ключа JWT.
+ Request
    + Headers
        Authentication: Bearer JWT
        
+ Response 200 (application/json)
    + Attributes
        + id: 1 (number) - идендификатор пользователя
        + cardId: 1 (number) - номер карточки пользователя
        + email: test@test.ru (string) - почта пользователя
        + fio: Иванов Иван Иванович (string) - фио пользователя
        
    + body
        [
            {
                "id": 1,
                "cardId": 1,
                "email": "test@test.ru",
                "fio": "Иванов Иван Иванович"
            },
            {
                "id": 2,
                "cardId": 2,
                "email": "test@test.ru",
                "fio": "Сидоров Семен Семенович"
            }
        ]
+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }
        
        
## Список докторов [/doctor/all]
### Список и информация о докторах [GET]
Получение списка всех докторов и их текстового описания
+ Request
+ Response 200 (application/json)
    + Attributes
        + doctorId: 1 (number) - идендификатор доктора
        + fio: Иванов Иван Иванович (string) - фио врача
        + info: Такой крутой парень (string) - описание врача
    + body
    [
        {
          "doctorId": 1,
          "fio": "Иванов Иван Иванович",
          "info": "Такой крутой парень"
        },
        {
          "doctorId": 2,
          "fio": "Иванов Иван Иванович",
          "info": "Такой крутой парень"
        }
    ]


## Общая информация [/doctor/info(?doctorId)]
### Информация о докторе [GET]
Получение текстового описания врача
+ Parameters
    + doctorId (reqired, Number, `1`) ... Числовой идендификатор врача
    
+ Request
+ Response 200 (application/json)
    + Attributes
        + doctorId: 1 (number) - идендификатор доктора
        + fio: Иванов Иван Иванович (string) - фио врача
        + info: Такой крутой парень (string) - описание врача

### Обновление информации о докторе [PUT]
Обновление текстового описания врача, работает только если доктор (которого мы определили с помощью jwt ключа), меняет информацию о себе
+ Parameters
    + doctorId (optional, Number, `1`) ... Числовой идендификатор врача
    
+ Attributes
    + fio: Иванов Иван Петрович (string) - фио врача, может измениться
    + email: test@test.ru (string) - email врача
    + info: еще более крутой парень (required, string) - описание врача

+ Request  (application/json)
    + Headers
        Authentication: Bearer JWT
+ Response 200 (application/json)
    + Attributes
        + succsess: true (boolean) - удалось ли обновить информацию
+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }

## Часы приема [/doctor/workingTime(?doctorId)]
### Получение часов приема [GET]
+ Parameters
    + doctorId (required, Number, `1`) ... Числовой идендификатор врача
+ Request
+ Response 200 (application/json)
    + Attributes
        + day: 1 (number) - день недели (1 - понедельник)
        + start (string) - начало работы, формат hr:mn-hr:mh, в местном времени, часовые пояса не учитываем
        + end (string) - конец работы, формат hr:mn-hr:mh, в местном времени, часовые пояса не учитываем
    + body
    {
        workingTime: [
            {
                "day": 1,
                "start": "08:00",
                "end": "17:00"
            },
            {
                "day": 2,
                "start": "08:00",
                "end": "17:00"
            },
            {
                "day": 3,
                "start": "08:00",
                "end": "17:00"
            },
            {
                "day": 4,
                "start": "08:00",
                "end": "17:00"
            },
            {
                "day": 5,
                "start": "08:00",
                "end": "17:00"
            }
        ]
    }


### Обновление часов приема [PUT]
Обновление текстового описания врача, работает только если доктор (которого мы определили с помощью jwt ключа), меняет информацию о себе
+ Parameters
    + doctorId (optional, Number, `1`) ... Числовой идендификатор врача
+ Attributes
    + day: 1 (number) - день недели (1 - понедельник)
    + start (string) - начало работы, формат hr:mn-hr:mh, в местном времени, часовые пояса не учитываем
    + end (string) - конец работы, формат hr:mn-hr:mh, в местном времени, часовые пояса не учитываем

+ Request  (application/json)
    + Headers
        Authentication: Bearer JWT
    + body
    {
        workingTime: [
            {
                "day": 1,
                "start": "08:00",
                "end": "17:00"
            },
            {
                "day": 2,
                "start": "08:00",
                "end": "17:00"
            },
            {
                "day": 3,
                "start": "08:00",
                "end": "17:00"
            },
            {
                "day": 4,
                "start": "08:00",
                "end": "17:00"
            },
            {
                "day": 5,
                "start": "08:00",
                "end": "17:00"
            }
        ]
    }
+ Response 200 (application/json)
    + Attributes
        + succsess: true (boolean) - удалось ли обновить время
+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }


        
## Запись на прием [/doctor/appointment(?doctorId)]
### Получить доступное для записи время [GET]
+ Parameters
    + doctorId (required, Number, `1`) ... Числовой идендификатор врача
+ Request  (application/json)
+ Response 200 (application/json)
    + Attributes
        + tine: 1 (number) - unix epoch time, время с 1970
    + body
    [1614833984, 1614833984, 1614833984]

# Group Пациент
Методы модуля пациент

## Общая информация [/patient/info]
### Получение информации [GET]
Получение текстового описания пациента

+ Request
    + Headers
        Authentication: Bearer JWT
+ Response 200 (application/json)
    + Attributes
        + patientId: 1 (number) - идендификатор пациента
        + fio: Иванов Иван Иванович (string) - фио пациента
        + cardId: 1 (number) - идендификатор карточки пациента

### Обновление информации [PUT]
Обновление текстового описания пациента
+ Attributes
    + fio: Иванов Иван Петрович (string) - фио пациента, может измениться
    + email: test@test.ru (string) - email пациента

+ Request  (application/json)
    + Headers
        Authentication: Bearer JWT
+ Response 200 (application/json)
    + Attributes
        + succsess: true (boolean) - удалось ли обновить информацию
+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }

## Карточка пациента [/patient/card(?cardId)]
### Получение истории болезни [GET]
Получение списка болезней пациента из карточки, доступа или пациенту карточки или текущему лечещему врача
+ Parameters
    + cardId (reqired, Number, `1`) ... Числовой идендификатор карточки пациента
    
+ Request
    + Headers
        Authentication: Bearer JWT
+ Response 200 (application/json)
    + Attributes
        + doctorId: 1 (number) - идендификатор доктора, который производил лечение
        + date: 1614833984 (number) - дата болезни
        + info: У меня растет 3я рука (string) - описание болезни
        + recomendation: Отрежте её (string) - рекомендации врача
    + body
    [
        {
          "doctorId": 1,
          "date": 1614833984,
          "info": "У меня растет 3я рука",
          "recomendation": "Отрежте её"
        },
        {
          "doctorId": 1,
          "date": 1614833984,
          "info": "А теперь 2я голова",
          "recomendation": "И её отрежте"
        } 
    ]
+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }
        
### Добавление нового поля в историю болезни[PUT]
+ Parameters
    + cardId (reqired, Number, `1`) ... Числовой идендификатор карточки пациента
    
+ Request (application/json)
    + Headers
        Authentication: Bearer JWT
    + Attributes
        + doctorId: 1 (number) - идендификатор доктора, который производит лечение
        + date: 1614833984 (number) - дата болезни
        + info: У меня растет 3я рука (string) - описание болезни
+ Response 200 (application/json)
    + Attributes
        + succsess: true (boolean) - удалось ли добавить новое поле
+ Response 401 (application/json)
        {
            "error": "error.unauthorized"
        }
        
### Изменение последней записи в истории болезни[POST]
+ Parameters
    + cardId (reqired, Number, `1`) ... Числовой идендификатор карточки пациента
    
+ Request (application/json)
    + Headers
        Authentication: Bearer JWT
    + Attributes
    
        + info: У меня растет 3я рука (string) - описание болезни
        + recomendation: Отрежте её (string) - рекомендации врача
+ Response 200 (application/json)
    + Attributes
    
        + succsess: true (boolean) - удалось ли обновить запись
+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }